/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IRecovery } from "./IRecovery";

export class IRecoveryFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRecovery {
    return new Contract(address, _abi, signerOrProvider) as IRecovery;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "enterRecoveryMode",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "exitRecoveryMode",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [],
    name: "approveExitRecovery",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "isInRecoveryMode",
    outputs: [
      {
        name: "inRecoveryMode",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_user",
        type: "address"
      }
    ],
    name: "setRecoveryRole",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_user",
        type: "address"
      }
    ],
    name: "removeRecoveryRole",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "numRecoveryRoles",
    outputs: [
      {
        name: "numRoles",
        type: "uint64"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "_slot",
        type: "uint256"
      },
      {
        name: "_value",
        type: "bytes32"
      }
    ],
    name: "setStorageSlotRecovery",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        name: "_slot",
        type: "uint256"
      }
    ],
    name: "checkNotAdditionalProtectedVariable",
    outputs: [],
    payable: false,
    stateMutability: "view",
    type: "function"
  }
];
