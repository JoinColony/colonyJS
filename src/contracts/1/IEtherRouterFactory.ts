/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { IEtherRouter } from "./IEtherRouter";

export class IEtherRouterFactory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEtherRouter {
    return new Contract(address, _abi, signerOrProvider) as IEtherRouter;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_resolver",
        type: "address"
      }
    ],
    name: "setResolver",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "owner_",
        type: "address"
      }
    ],
    name: "setOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        name: "authority_",
        type: "address"
      }
    ],
    name: "setAuthority",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];
