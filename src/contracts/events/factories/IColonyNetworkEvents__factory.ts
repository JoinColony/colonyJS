/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IColonyNetworkEvents,
  IColonyNetworkEventsInterface,
} from "../IColonyNetworkEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "resolver",
        type: "address",
      },
    ],
    name: "ColonyNetworkInitialised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "tokenLocking",
        type: "address",
      },
    ],
    name: "TokenLockingAddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "miningCycleResolver",
        type: "address",
      },
    ],
    name: "MiningCycleResolverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "feeInverse",
        type: "uint256",
      },
    ],
    name: "NetworkFeeInverseSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "version",
        type: "uint256",
      },
      {
        indexed: false,
        name: "resolver",
        type: "address",
      },
    ],
    name: "ColonyVersionAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "metaColony",
        type: "address",
      },
      {
        indexed: false,
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        name: "rootSkillId",
        type: "uint256",
      },
    ],
    name: "MetaColonyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "colonyId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "colonyAddress",
        type: "address",
      },
      {
        indexed: false,
        name: "token",
        type: "address",
      },
    ],
    name: "ColonyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "skillId",
        type: "uint256",
      },
      {
        indexed: false,
        name: "parentSkillId",
        type: "uint256",
      },
    ],
    name: "SkillAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "auction",
        type: "address",
      },
      {
        indexed: false,
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "inactiveReputationMiningCycle",
        type: "address",
      },
    ],
    name: "ReputationMiningInitialised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "nNodes",
        type: "uint256",
      },
    ],
    name: "ReputationMiningCycleComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newHash",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "newNNodes",
        type: "uint256",
      },
      {
        indexed: false,
        name: "stakers",
        type: "address[]",
      },
      {
        indexed: false,
        name: "reward",
        type: "uint256",
      },
    ],
    name: "ReputationRootHashSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        name: "label",
        type: "bytes32",
      },
    ],
    name: "UserLabelRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "colony",
        type: "address",
      },
      {
        indexed: false,
        name: "label",
        type: "bytes32",
      },
    ],
    name: "ColonyLabelRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        name: "setTo",
        type: "bool",
      },
    ],
    name: "RecoveryRoleSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "extensionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "ExtensionAddedToNetwork",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "extensionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "colony",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "deprecated",
        type: "bool",
      },
    ],
    name: "ExtensionDeprecated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "extensionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "colony",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "ExtensionInstalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "extensionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "colony",
        type: "address",
      },
    ],
    name: "ExtensionUninstalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "extensionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "colony",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "ExtensionUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RecoveryModeEntered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RecoveryModeExitApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RecoveryModeExited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "slot",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "fromValue",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "toValue",
        type: "bytes32",
      },
    ],
    name: "RecoveryStorageSlotSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ens",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
    ],
    name: "RegistrarInitialised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "miner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensLost",
        type: "uint256",
      },
    ],
    name: "ReputationMinerPenalised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReputationMiningRewardSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAuthorityAddress",
        type: "address",
      },
    ],
    name: "TokenAuthorityDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "TokenDeployed",
    type: "event",
  },
] as const;

export class IColonyNetworkEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IColonyNetworkEventsInterface {
    return new utils.Interface(_abi) as IColonyNetworkEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IColonyNetworkEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IColonyNetworkEvents;
  }
}
