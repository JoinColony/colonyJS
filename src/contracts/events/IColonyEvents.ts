/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface IColonyEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "ColonyInitialised(address,address)": EventFragment;
    "ColonyInitialised(address,address,address)": EventFragment;
    "ColonyBootstrapped(address[],int256[])": EventFragment;
    "ColonyBootstrapped(address,address[],int256[])": EventFragment;
    "ColonyUpgraded(uint256,uint256)": EventFragment;
    "ColonyUpgraded(address,uint256,uint256)": EventFragment;
    "ColonyRoleSet(address,uint256,uint8,bool)": EventFragment;
    "ColonyRoleSet(address,address,uint256,uint8,bool)": EventFragment;
    "ColonyFundsMovedBetweenFundingPots(uint256,uint256,uint256,address)": EventFragment;
    "ColonyFundsMovedBetweenFundingPots(address,uint256,uint256,uint256,address)": EventFragment;
    "ColonyFundsClaimed(address,uint256,uint256)": EventFragment;
    "ColonyFundsClaimed(address,address,uint256,uint256)": EventFragment;
    "RewardPayoutCycleStarted(uint256)": EventFragment;
    "RewardPayoutCycleStarted(address,uint256)": EventFragment;
    "RewardPayoutCycleEnded(uint256)": EventFragment;
    "RewardPayoutCycleEnded(address,uint256)": EventFragment;
    "RewardPayoutClaimed(uint256,address,uint256,uint256)": EventFragment;
    "ColonyRewardInverseSet(uint256)": EventFragment;
    "ColonyRewardInverseSet(address,uint256)": EventFragment;
    "PaymentAdded(uint256)": EventFragment;
    "PaymentAdded(address,uint256)": EventFragment;
    "TaskAdded(uint256)": EventFragment;
    "TaskAdded(address,uint256)": EventFragment;
    "TaskBriefSet(uint256,bytes32)": EventFragment;
    "TaskDueDateSet(uint256,uint256)": EventFragment;
    "TaskDomainSet(uint256,uint256)": EventFragment;
    "TaskSkillSet(uint256,uint256)": EventFragment;
    "TaskRoleUserSet(uint256,uint8,address)": EventFragment;
    "TaskPayoutSet(uint256,uint8,address,uint256)": EventFragment;
    "TaskDeliverableSubmitted(uint256,bytes32)": EventFragment;
    "TaskDeliverableSubmitted(address,uint256,bytes32)": EventFragment;
    "TaskCompleted(uint256)": EventFragment;
    "TaskCompleted(address,uint256)": EventFragment;
    "TaskWorkRatingRevealed(uint256,uint8,uint8)": EventFragment;
    "TaskWorkRatingRevealed(address,uint256,uint8,uint8)": EventFragment;
    "TaskFinalized(uint256)": EventFragment;
    "TaskFinalized(address,uint256)": EventFragment;
    "PayoutClaimed(uint256,address,uint256)": EventFragment;
    "PayoutClaimed(address,uint256,address,uint256)": EventFragment;
    "TaskCanceled(uint256)": EventFragment;
    "DomainAdded(uint256)": EventFragment;
    "DomainAdded(address,uint256)": EventFragment;
    "FundingPotAdded(uint256)": EventFragment;
    "RecoveryRoleSet(address,bool)": EventFragment;
    "ExpenditureAdded(uint256)": EventFragment;
    "ExpenditureAdded(address,uint256)": EventFragment;
    "ExpenditureTransferred(uint256,address)": EventFragment;
    "ExpenditureTransferred(address,uint256,address)": EventFragment;
    "ExpenditureCancelled(uint256)": EventFragment;
    "ExpenditureCancelled(address,uint256)": EventFragment;
    "ExpenditureFinalized(uint256)": EventFragment;
    "ExpenditureFinalized(address,uint256)": EventFragment;
    "ExpenditureRecipientSet(uint256,uint256,address)": EventFragment;
    "ExpenditureRecipientSet(address,uint256,uint256,address)": EventFragment;
    "ExpenditureSkillSet(uint256,uint256,uint256)": EventFragment;
    "ExpenditureSkillSet(address,uint256,uint256,uint256)": EventFragment;
    "ExpenditurePayoutSet(uint256,uint256,address,uint256)": EventFragment;
    "ExpenditurePayoutSet(address,uint256,uint256,address,uint256)": EventFragment;
    "Annotation(address,bytes32,string)": EventFragment;
    "ColonyMetadata(address,string)": EventFragment;
    "DomainMetadata(address,uint256,string)": EventFragment;
    "PaymentFinalized(address,uint256)": EventFragment;
    "PaymentPayoutSet(address,uint256,address,uint256)": EventFragment;
    "PaymentRecipientSet(address,uint256,address)": EventFragment;
    "PaymentSkillSet(address,uint256,uint256)": EventFragment;
    "RecoveryModeEntered(address)": EventFragment;
    "RecoveryModeExitApproved(address)": EventFragment;
    "RecoveryModeExited(address)": EventFragment;
    "RecoveryStorageSlotSet(address,uint256,bytes32,bytes32)": EventFragment;
    "TaskChangedViaSignatures(address[])": EventFragment;
    "TokenUnlocked()": EventFragment;
    "TokenUnlocked(address)": EventFragment;
    "TokensBurned(address,address,uint256)": EventFragment;
    "TokensMinted(address,address,uint256)": EventFragment;
    "ArbitraryReputationUpdate(address,address,uint256,int256)": EventFragment;
    "ExpenditureClaimDelaySet(address,uint256,uint256,uint256)": EventFragment;
    "ExpenditureGlobalClaimDelaySet(address,uint256)": EventFragment;
    "ExpenditureLocked(address,uint256)": EventFragment;
    "ExpenditureMetadataSet(address,uint256,string)": EventFragment;
    "ExpenditurePayoutModifierSet(address,uint256,uint256,int256)": EventFragment;
    "ColonyMetadataDelta(address,string)": EventFragment;
    "DomainDeprecated(address,uint256,bool)": EventFragment;
    "LocalSkillAdded(address,uint256)": EventFragment;
    "LocalSkillDeprecated(address,uint256,bool)": EventFragment;
    "MetaTransactionExecuted(address,address,bytes)": EventFragment;
    "ColonyFundingRoleSet(address,bool)": EventFragment;
    "ColonyAdministrationRoleSet(address,bool)": EventFragment;
    "ColonyArchitectureRoleSet(address,bool)": EventFragment;
    "ColonyRootRoleSet(address,bool)": EventFragment;
    "ExpenditureStateChanged(address,uint256,uint256,bool[],bytes32[],bytes32)": EventFragment;
    "ArbitraryTransaction(address,bytes,bool)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "ColonyInitialised(address,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyInitialised(address,address,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyBootstrapped(address[],int256[])"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyBootstrapped(address,address[],int256[])"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyUpgraded(uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyUpgraded(address,uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyRoleSet(address,uint256,uint8,bool)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyRoleSet(address,address,uint256,uint8,bool)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyFundsMovedBetweenFundingPots(uint256,uint256,uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyFundsMovedBetweenFundingPots(address,uint256,uint256,uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyFundsClaimed(address,uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyFundsClaimed(address,address,uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RewardPayoutCycleStarted(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RewardPayoutCycleStarted(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RewardPayoutCycleEnded(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RewardPayoutCycleEnded(address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RewardPayoutClaimed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyRewardInverseSet(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyRewardInverseSet(address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentAdded(uint256)"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PaymentAdded(address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskAdded(uint256)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskAdded(address,uint256)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskBriefSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskDueDateSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskDomainSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskSkillSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskRoleUserSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskPayoutSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskDeliverableSubmitted(uint256,bytes32)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskDeliverableSubmitted(address,uint256,bytes32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskCompleted(uint256)"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskCompleted(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskWorkRatingRevealed(uint256,uint8,uint8)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskWorkRatingRevealed(address,uint256,uint8,uint8)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskFinalized(uint256)"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TaskFinalized(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PayoutClaimed(uint256,address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PayoutClaimed(address,uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskCanceled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainAdded(uint256)"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DomainAdded(address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FundingPotAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureAdded(uint256)"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureAdded(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureTransferred(uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureTransferred(address,uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureCancelled(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureCancelled(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureFinalized(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureFinalized(address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureRecipientSet(uint256,uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureRecipientSet(address,uint256,uint256,address)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureSkillSet(uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureSkillSet(address,uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditurePayoutSet(uint256,uint256,address,uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditurePayoutSet(address,uint256,uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Annotation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyMetadata"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainMetadata"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentFinalized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentPayoutSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentRecipientSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PaymentSkillSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeEntered"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeExitApproved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryModeExited"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RecoveryStorageSlotSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TaskChangedViaSignatures"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenUnlocked()"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokenUnlocked(address)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensBurned"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TokensMinted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ArbitraryReputationUpdate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureClaimDelaySet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditureGlobalClaimDelaySet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureLocked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureMetadataSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ExpenditurePayoutModifierSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyMetadataDelta"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DomainDeprecated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LocalSkillAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "LocalSkillDeprecated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MetaTransactionExecuted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyFundingRoleSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ColonyAdministrationRoleSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyArchitectureRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ColonyRootRoleSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExpenditureStateChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ArbitraryTransaction"): EventFragment;
}

export interface ColonyInitialised_address_address_EventObject {
  colonyNetwork: string;
  token: string;
}
export type ColonyInitialised_address_address_Event = TypedEvent<
  [string, string],
  ColonyInitialised_address_address_EventObject
>;

export type ColonyInitialised_address_address_EventFilter =
  TypedEventFilter<ColonyInitialised_address_address_Event>;

export interface ColonyInitialised_address_address_address_EventObject {
  agent: string;
  colonyNetwork: string;
  token: string;
}
export type ColonyInitialised_address_address_address_Event = TypedEvent<
  [string, string, string],
  ColonyInitialised_address_address_address_EventObject
>;

export type ColonyInitialised_address_address_address_EventFilter =
  TypedEventFilter<ColonyInitialised_address_address_address_Event>;

export interface ColonyBootstrapped_address_array_int256_array_EventObject {
  users: string[];
  amounts: BigNumber[];
}
export type ColonyBootstrapped_address_array_int256_array_Event = TypedEvent<
  [string[], BigNumber[]],
  ColonyBootstrapped_address_array_int256_array_EventObject
>;

export type ColonyBootstrapped_address_array_int256_array_EventFilter =
  TypedEventFilter<ColonyBootstrapped_address_array_int256_array_Event>;

export interface ColonyBootstrapped_address_address_array_int256_array_EventObject {
  agent: string;
  users: string[];
  amounts: BigNumber[];
}
export type ColonyBootstrapped_address_address_array_int256_array_Event =
  TypedEvent<
    [string, string[], BigNumber[]],
    ColonyBootstrapped_address_address_array_int256_array_EventObject
  >;

export type ColonyBootstrapped_address_address_array_int256_array_EventFilter =
  TypedEventFilter<ColonyBootstrapped_address_address_array_int256_array_Event>;

export interface ColonyUpgraded_uint256_uint256_EventObject {
  oldVersion: BigNumber;
  newVersion: BigNumber;
}
export type ColonyUpgraded_uint256_uint256_Event = TypedEvent<
  [BigNumber, BigNumber],
  ColonyUpgraded_uint256_uint256_EventObject
>;

export type ColonyUpgraded_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyUpgraded_uint256_uint256_Event>;

export interface ColonyUpgraded_address_uint256_uint256_EventObject {
  agent: string;
  oldVersion: BigNumber;
  newVersion: BigNumber;
}
export type ColonyUpgraded_address_uint256_uint256_Event = TypedEvent<
  [string, BigNumber, BigNumber],
  ColonyUpgraded_address_uint256_uint256_EventObject
>;

export type ColonyUpgraded_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyUpgraded_address_uint256_uint256_Event>;

export interface ColonyRoleSet_address_uint256_uint8_bool_EventObject {
  user: string;
  domainId: BigNumber;
  role: number;
  setTo: boolean;
}
export type ColonyRoleSet_address_uint256_uint8_bool_Event = TypedEvent<
  [string, BigNumber, number, boolean],
  ColonyRoleSet_address_uint256_uint8_bool_EventObject
>;

export type ColonyRoleSet_address_uint256_uint8_bool_EventFilter =
  TypedEventFilter<ColonyRoleSet_address_uint256_uint8_bool_Event>;

export interface ColonyRoleSet_address_address_uint256_uint8_bool_EventObject {
  agent: string;
  user: string;
  domainId: BigNumber;
  role: number;
  setTo: boolean;
}
export type ColonyRoleSet_address_address_uint256_uint8_bool_Event = TypedEvent<
  [string, string, BigNumber, number, boolean],
  ColonyRoleSet_address_address_uint256_uint8_bool_EventObject
>;

export type ColonyRoleSet_address_address_uint256_uint8_bool_EventFilter =
  TypedEventFilter<ColonyRoleSet_address_address_uint256_uint8_bool_Event>;

export interface ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventObject {
  fromPot: BigNumber;
  toPot: BigNumber;
  amount: BigNumber;
  token: string;
}
export type ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_Event =
  TypedEvent<
    [BigNumber, BigNumber, BigNumber, string],
    ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventObject
  >;

export type ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventFilter =
  TypedEventFilter<ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_Event>;

export interface ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventObject {
  agent: string;
  fromPot: BigNumber;
  toPot: BigNumber;
  amount: BigNumber;
  token: string;
}
export type ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, BigNumber, string],
    ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventObject
  >;

export type ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventFilter =
  TypedEventFilter<ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_Event>;

export interface ColonyFundsClaimed_address_uint256_uint256_EventObject {
  token: string;
  fee: BigNumber;
  payoutRemainder: BigNumber;
}
export type ColonyFundsClaimed_address_uint256_uint256_Event = TypedEvent<
  [string, BigNumber, BigNumber],
  ColonyFundsClaimed_address_uint256_uint256_EventObject
>;

export type ColonyFundsClaimed_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyFundsClaimed_address_uint256_uint256_Event>;

export interface ColonyFundsClaimed_address_address_uint256_uint256_EventObject {
  agent: string;
  token: string;
  fee: BigNumber;
  payoutRemainder: BigNumber;
}
export type ColonyFundsClaimed_address_address_uint256_uint256_Event =
  TypedEvent<
    [string, string, BigNumber, BigNumber],
    ColonyFundsClaimed_address_address_uint256_uint256_EventObject
  >;

export type ColonyFundsClaimed_address_address_uint256_uint256_EventFilter =
  TypedEventFilter<ColonyFundsClaimed_address_address_uint256_uint256_Event>;

export interface RewardPayoutCycleStarted_uint256_EventObject {
  rewardPayoutId: BigNumber;
}
export type RewardPayoutCycleStarted_uint256_Event = TypedEvent<
  [BigNumber],
  RewardPayoutCycleStarted_uint256_EventObject
>;

export type RewardPayoutCycleStarted_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleStarted_uint256_Event>;

export interface RewardPayoutCycleStarted_address_uint256_EventObject {
  agent: string;
  rewardPayoutId: BigNumber;
}
export type RewardPayoutCycleStarted_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  RewardPayoutCycleStarted_address_uint256_EventObject
>;

export type RewardPayoutCycleStarted_address_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleStarted_address_uint256_Event>;

export interface RewardPayoutCycleEnded_uint256_EventObject {
  rewardPayoutId: BigNumber;
}
export type RewardPayoutCycleEnded_uint256_Event = TypedEvent<
  [BigNumber],
  RewardPayoutCycleEnded_uint256_EventObject
>;

export type RewardPayoutCycleEnded_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleEnded_uint256_Event>;

export interface RewardPayoutCycleEnded_address_uint256_EventObject {
  agent: string;
  rewardPayoutId: BigNumber;
}
export type RewardPayoutCycleEnded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  RewardPayoutCycleEnded_address_uint256_EventObject
>;

export type RewardPayoutCycleEnded_address_uint256_EventFilter =
  TypedEventFilter<RewardPayoutCycleEnded_address_uint256_Event>;

export interface RewardPayoutClaimedEventObject {
  rewardPayoutId: BigNumber;
  user: string;
  fee: BigNumber;
  rewardRemainder: BigNumber;
}
export type RewardPayoutClaimedEvent = TypedEvent<
  [BigNumber, string, BigNumber, BigNumber],
  RewardPayoutClaimedEventObject
>;

export type RewardPayoutClaimedEventFilter =
  TypedEventFilter<RewardPayoutClaimedEvent>;

export interface ColonyRewardInverseSet_uint256_EventObject {
  rewardInverse: BigNumber;
}
export type ColonyRewardInverseSet_uint256_Event = TypedEvent<
  [BigNumber],
  ColonyRewardInverseSet_uint256_EventObject
>;

export type ColonyRewardInverseSet_uint256_EventFilter =
  TypedEventFilter<ColonyRewardInverseSet_uint256_Event>;

export interface ColonyRewardInverseSet_address_uint256_EventObject {
  agent: string;
  rewardInverse: BigNumber;
}
export type ColonyRewardInverseSet_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  ColonyRewardInverseSet_address_uint256_EventObject
>;

export type ColonyRewardInverseSet_address_uint256_EventFilter =
  TypedEventFilter<ColonyRewardInverseSet_address_uint256_Event>;

export interface PaymentAdded_uint256_EventObject {
  paymentId: BigNumber;
}
export type PaymentAdded_uint256_Event = TypedEvent<
  [BigNumber],
  PaymentAdded_uint256_EventObject
>;

export type PaymentAdded_uint256_EventFilter =
  TypedEventFilter<PaymentAdded_uint256_Event>;

export interface PaymentAdded_address_uint256_EventObject {
  agent: string;
  paymentId: BigNumber;
}
export type PaymentAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  PaymentAdded_address_uint256_EventObject
>;

export type PaymentAdded_address_uint256_EventFilter =
  TypedEventFilter<PaymentAdded_address_uint256_Event>;

export interface TaskAdded_uint256_EventObject {
  taskId: BigNumber;
}
export type TaskAdded_uint256_Event = TypedEvent<
  [BigNumber],
  TaskAdded_uint256_EventObject
>;

export type TaskAdded_uint256_EventFilter =
  TypedEventFilter<TaskAdded_uint256_Event>;

export interface TaskAdded_address_uint256_EventObject {
  agent: string;
  taskId: BigNumber;
}
export type TaskAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  TaskAdded_address_uint256_EventObject
>;

export type TaskAdded_address_uint256_EventFilter =
  TypedEventFilter<TaskAdded_address_uint256_Event>;

export interface TaskBriefSetEventObject {
  taskId: BigNumber;
  specificationHash: string;
}
export type TaskBriefSetEvent = TypedEvent<
  [BigNumber, string],
  TaskBriefSetEventObject
>;

export type TaskBriefSetEventFilter = TypedEventFilter<TaskBriefSetEvent>;

export interface TaskDueDateSetEventObject {
  taskId: BigNumber;
  dueDate: BigNumber;
}
export type TaskDueDateSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  TaskDueDateSetEventObject
>;

export type TaskDueDateSetEventFilter = TypedEventFilter<TaskDueDateSetEvent>;

export interface TaskDomainSetEventObject {
  taskId: BigNumber;
  domainId: BigNumber;
}
export type TaskDomainSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  TaskDomainSetEventObject
>;

export type TaskDomainSetEventFilter = TypedEventFilter<TaskDomainSetEvent>;

export interface TaskSkillSetEventObject {
  taskId: BigNumber;
  skillId: BigNumber;
}
export type TaskSkillSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  TaskSkillSetEventObject
>;

export type TaskSkillSetEventFilter = TypedEventFilter<TaskSkillSetEvent>;

export interface TaskRoleUserSetEventObject {
  taskId: BigNumber;
  role: number;
  user: string;
}
export type TaskRoleUserSetEvent = TypedEvent<
  [BigNumber, number, string],
  TaskRoleUserSetEventObject
>;

export type TaskRoleUserSetEventFilter = TypedEventFilter<TaskRoleUserSetEvent>;

export interface TaskPayoutSetEventObject {
  taskId: BigNumber;
  role: number;
  token: string;
  amount: BigNumber;
}
export type TaskPayoutSetEvent = TypedEvent<
  [BigNumber, number, string, BigNumber],
  TaskPayoutSetEventObject
>;

export type TaskPayoutSetEventFilter = TypedEventFilter<TaskPayoutSetEvent>;

export interface TaskDeliverableSubmitted_uint256_bytes32_EventObject {
  taskId: BigNumber;
  deliverableHash: string;
}
export type TaskDeliverableSubmitted_uint256_bytes32_Event = TypedEvent<
  [BigNumber, string],
  TaskDeliverableSubmitted_uint256_bytes32_EventObject
>;

export type TaskDeliverableSubmitted_uint256_bytes32_EventFilter =
  TypedEventFilter<TaskDeliverableSubmitted_uint256_bytes32_Event>;

export interface TaskDeliverableSubmitted_address_uint256_bytes32_EventObject {
  agent: string;
  taskId: BigNumber;
  deliverableHash: string;
}
export type TaskDeliverableSubmitted_address_uint256_bytes32_Event = TypedEvent<
  [string, BigNumber, string],
  TaskDeliverableSubmitted_address_uint256_bytes32_EventObject
>;

export type TaskDeliverableSubmitted_address_uint256_bytes32_EventFilter =
  TypedEventFilter<TaskDeliverableSubmitted_address_uint256_bytes32_Event>;

export interface TaskCompleted_uint256_EventObject {
  taskId: BigNumber;
}
export type TaskCompleted_uint256_Event = TypedEvent<
  [BigNumber],
  TaskCompleted_uint256_EventObject
>;

export type TaskCompleted_uint256_EventFilter =
  TypedEventFilter<TaskCompleted_uint256_Event>;

export interface TaskCompleted_address_uint256_EventObject {
  agent: string;
  taskId: BigNumber;
}
export type TaskCompleted_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  TaskCompleted_address_uint256_EventObject
>;

export type TaskCompleted_address_uint256_EventFilter =
  TypedEventFilter<TaskCompleted_address_uint256_Event>;

export interface TaskWorkRatingRevealed_uint256_uint8_uint8_EventObject {
  taskId: BigNumber;
  role: number;
  rating: number;
}
export type TaskWorkRatingRevealed_uint256_uint8_uint8_Event = TypedEvent<
  [BigNumber, number, number],
  TaskWorkRatingRevealed_uint256_uint8_uint8_EventObject
>;

export type TaskWorkRatingRevealed_uint256_uint8_uint8_EventFilter =
  TypedEventFilter<TaskWorkRatingRevealed_uint256_uint8_uint8_Event>;

export interface TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventObject {
  agent: string;
  taskId: BigNumber;
  role: number;
  rating: number;
}
export type TaskWorkRatingRevealed_address_uint256_uint8_uint8_Event =
  TypedEvent<
    [string, BigNumber, number, number],
    TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventObject
  >;

export type TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventFilter =
  TypedEventFilter<TaskWorkRatingRevealed_address_uint256_uint8_uint8_Event>;

export interface TaskFinalized_uint256_EventObject {
  taskId: BigNumber;
}
export type TaskFinalized_uint256_Event = TypedEvent<
  [BigNumber],
  TaskFinalized_uint256_EventObject
>;

export type TaskFinalized_uint256_EventFilter =
  TypedEventFilter<TaskFinalized_uint256_Event>;

export interface TaskFinalized_address_uint256_EventObject {
  agent: string;
  taskId: BigNumber;
}
export type TaskFinalized_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  TaskFinalized_address_uint256_EventObject
>;

export type TaskFinalized_address_uint256_EventFilter =
  TypedEventFilter<TaskFinalized_address_uint256_Event>;

export interface PayoutClaimed_uint256_address_uint256_EventObject {
  fundingPotId: BigNumber;
  token: string;
  amount: BigNumber;
}
export type PayoutClaimed_uint256_address_uint256_Event = TypedEvent<
  [BigNumber, string, BigNumber],
  PayoutClaimed_uint256_address_uint256_EventObject
>;

export type PayoutClaimed_uint256_address_uint256_EventFilter =
  TypedEventFilter<PayoutClaimed_uint256_address_uint256_Event>;

export interface PayoutClaimed_address_uint256_address_uint256_EventObject {
  agent: string;
  fundingPotId: BigNumber;
  token: string;
  amount: BigNumber;
}
export type PayoutClaimed_address_uint256_address_uint256_Event = TypedEvent<
  [string, BigNumber, string, BigNumber],
  PayoutClaimed_address_uint256_address_uint256_EventObject
>;

export type PayoutClaimed_address_uint256_address_uint256_EventFilter =
  TypedEventFilter<PayoutClaimed_address_uint256_address_uint256_Event>;

export interface TaskCanceledEventObject {
  taskId: BigNumber;
}
export type TaskCanceledEvent = TypedEvent<
  [BigNumber],
  TaskCanceledEventObject
>;

export type TaskCanceledEventFilter = TypedEventFilter<TaskCanceledEvent>;

export interface DomainAdded_uint256_EventObject {
  domainId: BigNumber;
}
export type DomainAdded_uint256_Event = TypedEvent<
  [BigNumber],
  DomainAdded_uint256_EventObject
>;

export type DomainAdded_uint256_EventFilter =
  TypedEventFilter<DomainAdded_uint256_Event>;

export interface DomainAdded_address_uint256_EventObject {
  agent: string;
  domainId: BigNumber;
}
export type DomainAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  DomainAdded_address_uint256_EventObject
>;

export type DomainAdded_address_uint256_EventFilter =
  TypedEventFilter<DomainAdded_address_uint256_Event>;

export interface FundingPotAddedEventObject {
  fundingPotId: BigNumber;
}
export type FundingPotAddedEvent = TypedEvent<
  [BigNumber],
  FundingPotAddedEventObject
>;

export type FundingPotAddedEventFilter = TypedEventFilter<FundingPotAddedEvent>;

export interface RecoveryRoleSetEventObject {
  user: string;
  setTo: boolean;
}
export type RecoveryRoleSetEvent = TypedEvent<
  [string, boolean],
  RecoveryRoleSetEventObject
>;

export type RecoveryRoleSetEventFilter = TypedEventFilter<RecoveryRoleSetEvent>;

export interface ExpenditureAdded_uint256_EventObject {
  expenditureId: BigNumber;
}
export type ExpenditureAdded_uint256_Event = TypedEvent<
  [BigNumber],
  ExpenditureAdded_uint256_EventObject
>;

export type ExpenditureAdded_uint256_EventFilter =
  TypedEventFilter<ExpenditureAdded_uint256_Event>;

export interface ExpenditureAdded_address_uint256_EventObject {
  agent: string;
  expenditureId: BigNumber;
}
export type ExpenditureAdded_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  ExpenditureAdded_address_uint256_EventObject
>;

export type ExpenditureAdded_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureAdded_address_uint256_Event>;

export interface ExpenditureTransferred_uint256_address_EventObject {
  expenditureId: BigNumber;
  owner: string;
}
export type ExpenditureTransferred_uint256_address_Event = TypedEvent<
  [BigNumber, string],
  ExpenditureTransferred_uint256_address_EventObject
>;

export type ExpenditureTransferred_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureTransferred_uint256_address_Event>;

export interface ExpenditureTransferred_address_uint256_address_EventObject {
  agent: string;
  expenditureId: BigNumber;
  owner: string;
}
export type ExpenditureTransferred_address_uint256_address_Event = TypedEvent<
  [string, BigNumber, string],
  ExpenditureTransferred_address_uint256_address_EventObject
>;

export type ExpenditureTransferred_address_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureTransferred_address_uint256_address_Event>;

export interface ExpenditureCancelled_uint256_EventObject {
  expenditureId: BigNumber;
}
export type ExpenditureCancelled_uint256_Event = TypedEvent<
  [BigNumber],
  ExpenditureCancelled_uint256_EventObject
>;

export type ExpenditureCancelled_uint256_EventFilter =
  TypedEventFilter<ExpenditureCancelled_uint256_Event>;

export interface ExpenditureCancelled_address_uint256_EventObject {
  agent: string;
  expenditureId: BigNumber;
}
export type ExpenditureCancelled_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  ExpenditureCancelled_address_uint256_EventObject
>;

export type ExpenditureCancelled_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureCancelled_address_uint256_Event>;

export interface ExpenditureFinalized_uint256_EventObject {
  expenditureId: BigNumber;
}
export type ExpenditureFinalized_uint256_Event = TypedEvent<
  [BigNumber],
  ExpenditureFinalized_uint256_EventObject
>;

export type ExpenditureFinalized_uint256_EventFilter =
  TypedEventFilter<ExpenditureFinalized_uint256_Event>;

export interface ExpenditureFinalized_address_uint256_EventObject {
  agent: string;
  expenditureId: BigNumber;
}
export type ExpenditureFinalized_address_uint256_Event = TypedEvent<
  [string, BigNumber],
  ExpenditureFinalized_address_uint256_EventObject
>;

export type ExpenditureFinalized_address_uint256_EventFilter =
  TypedEventFilter<ExpenditureFinalized_address_uint256_Event>;

export interface ExpenditureRecipientSet_uint256_uint256_address_EventObject {
  expenditureId: BigNumber;
  slot: BigNumber;
  recipient: string;
}
export type ExpenditureRecipientSet_uint256_uint256_address_Event = TypedEvent<
  [BigNumber, BigNumber, string],
  ExpenditureRecipientSet_uint256_uint256_address_EventObject
>;

export type ExpenditureRecipientSet_uint256_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureRecipientSet_uint256_uint256_address_Event>;

export interface ExpenditureRecipientSet_address_uint256_uint256_address_EventObject {
  agent: string;
  expenditureId: BigNumber;
  slot: BigNumber;
  recipient: string;
}
export type ExpenditureRecipientSet_address_uint256_uint256_address_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, string],
    ExpenditureRecipientSet_address_uint256_uint256_address_EventObject
  >;

export type ExpenditureRecipientSet_address_uint256_uint256_address_EventFilter =
  TypedEventFilter<ExpenditureRecipientSet_address_uint256_uint256_address_Event>;

export interface ExpenditureSkillSet_uint256_uint256_uint256_EventObject {
  expenditureId: BigNumber;
  slot: BigNumber;
  skillId: BigNumber;
}
export type ExpenditureSkillSet_uint256_uint256_uint256_Event = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ExpenditureSkillSet_uint256_uint256_uint256_EventObject
>;

export type ExpenditureSkillSet_uint256_uint256_uint256_EventFilter =
  TypedEventFilter<ExpenditureSkillSet_uint256_uint256_uint256_Event>;

export interface ExpenditureSkillSet_address_uint256_uint256_uint256_EventObject {
  agent: string;
  expenditureId: BigNumber;
  slot: BigNumber;
  skillId: BigNumber;
}
export type ExpenditureSkillSet_address_uint256_uint256_uint256_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, BigNumber],
    ExpenditureSkillSet_address_uint256_uint256_uint256_EventObject
  >;

export type ExpenditureSkillSet_address_uint256_uint256_uint256_EventFilter =
  TypedEventFilter<ExpenditureSkillSet_address_uint256_uint256_uint256_Event>;

export interface ExpenditurePayoutSet_uint256_uint256_address_uint256_EventObject {
  expenditureId: BigNumber;
  slot: BigNumber;
  token: string;
  amount: BigNumber;
}
export type ExpenditurePayoutSet_uint256_uint256_address_uint256_Event =
  TypedEvent<
    [BigNumber, BigNumber, string, BigNumber],
    ExpenditurePayoutSet_uint256_uint256_address_uint256_EventObject
  >;

export type ExpenditurePayoutSet_uint256_uint256_address_uint256_EventFilter =
  TypedEventFilter<ExpenditurePayoutSet_uint256_uint256_address_uint256_Event>;

export interface ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventObject {
  agent: string;
  expenditureId: BigNumber;
  slot: BigNumber;
  token: string;
  amount: BigNumber;
}
export type ExpenditurePayoutSet_address_uint256_uint256_address_uint256_Event =
  TypedEvent<
    [string, BigNumber, BigNumber, string, BigNumber],
    ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventObject
  >;

export type ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventFilter =
  TypedEventFilter<ExpenditurePayoutSet_address_uint256_uint256_address_uint256_Event>;

export interface AnnotationEventObject {
  agent: string;
  txHash: string;
  metadata: string;
}
export type AnnotationEvent = TypedEvent<
  [string, string, string],
  AnnotationEventObject
>;

export type AnnotationEventFilter = TypedEventFilter<AnnotationEvent>;

export interface ColonyMetadataEventObject {
  agent: string;
  metadata: string;
}
export type ColonyMetadataEvent = TypedEvent<
  [string, string],
  ColonyMetadataEventObject
>;

export type ColonyMetadataEventFilter = TypedEventFilter<ColonyMetadataEvent>;

export interface DomainMetadataEventObject {
  agent: string;
  domainId: BigNumber;
  metadata: string;
}
export type DomainMetadataEvent = TypedEvent<
  [string, BigNumber, string],
  DomainMetadataEventObject
>;

export type DomainMetadataEventFilter = TypedEventFilter<DomainMetadataEvent>;

export interface PaymentFinalizedEventObject {
  agent: string;
  paymentId: BigNumber;
}
export type PaymentFinalizedEvent = TypedEvent<
  [string, BigNumber],
  PaymentFinalizedEventObject
>;

export type PaymentFinalizedEventFilter =
  TypedEventFilter<PaymentFinalizedEvent>;

export interface PaymentPayoutSetEventObject {
  agent: string;
  paymentId: BigNumber;
  token: string;
  amount: BigNumber;
}
export type PaymentPayoutSetEvent = TypedEvent<
  [string, BigNumber, string, BigNumber],
  PaymentPayoutSetEventObject
>;

export type PaymentPayoutSetEventFilter =
  TypedEventFilter<PaymentPayoutSetEvent>;

export interface PaymentRecipientSetEventObject {
  agent: string;
  paymentId: BigNumber;
  recipient: string;
}
export type PaymentRecipientSetEvent = TypedEvent<
  [string, BigNumber, string],
  PaymentRecipientSetEventObject
>;

export type PaymentRecipientSetEventFilter =
  TypedEventFilter<PaymentRecipientSetEvent>;

export interface PaymentSkillSetEventObject {
  agent: string;
  paymentId: BigNumber;
  skillId: BigNumber;
}
export type PaymentSkillSetEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  PaymentSkillSetEventObject
>;

export type PaymentSkillSetEventFilter = TypedEventFilter<PaymentSkillSetEvent>;

export interface RecoveryModeEnteredEventObject {
  user: string;
}
export type RecoveryModeEnteredEvent = TypedEvent<
  [string],
  RecoveryModeEnteredEventObject
>;

export type RecoveryModeEnteredEventFilter =
  TypedEventFilter<RecoveryModeEnteredEvent>;

export interface RecoveryModeExitApprovedEventObject {
  user: string;
}
export type RecoveryModeExitApprovedEvent = TypedEvent<
  [string],
  RecoveryModeExitApprovedEventObject
>;

export type RecoveryModeExitApprovedEventFilter =
  TypedEventFilter<RecoveryModeExitApprovedEvent>;

export interface RecoveryModeExitedEventObject {
  user: string;
}
export type RecoveryModeExitedEvent = TypedEvent<
  [string],
  RecoveryModeExitedEventObject
>;

export type RecoveryModeExitedEventFilter =
  TypedEventFilter<RecoveryModeExitedEvent>;

export interface RecoveryStorageSlotSetEventObject {
  user: string;
  slot: BigNumber;
  fromValue: string;
  toValue: string;
}
export type RecoveryStorageSlotSetEvent = TypedEvent<
  [string, BigNumber, string, string],
  RecoveryStorageSlotSetEventObject
>;

export type RecoveryStorageSlotSetEventFilter =
  TypedEventFilter<RecoveryStorageSlotSetEvent>;

export interface TaskChangedViaSignaturesEventObject {
  reviewerAddresses: string[];
}
export type TaskChangedViaSignaturesEvent = TypedEvent<
  [string[]],
  TaskChangedViaSignaturesEventObject
>;

export type TaskChangedViaSignaturesEventFilter =
  TypedEventFilter<TaskChangedViaSignaturesEvent>;

export interface TokenUnlocked__EventObject {}
export type TokenUnlocked__Event = TypedEvent<[], TokenUnlocked__EventObject>;

export type TokenUnlocked__EventFilter = TypedEventFilter<TokenUnlocked__Event>;

export interface TokenUnlocked_address_EventObject {
  agent: string;
}
export type TokenUnlocked_address_Event = TypedEvent<
  [string],
  TokenUnlocked_address_EventObject
>;

export type TokenUnlocked_address_EventFilter =
  TypedEventFilter<TokenUnlocked_address_Event>;

export interface TokensBurnedEventObject {
  agent: string;
  token: string;
  amount: BigNumber;
}
export type TokensBurnedEvent = TypedEvent<
  [string, string, BigNumber],
  TokensBurnedEventObject
>;

export type TokensBurnedEventFilter = TypedEventFilter<TokensBurnedEvent>;

export interface TokensMintedEventObject {
  agent: string;
  who: string;
  amount: BigNumber;
}
export type TokensMintedEvent = TypedEvent<
  [string, string, BigNumber],
  TokensMintedEventObject
>;

export type TokensMintedEventFilter = TypedEventFilter<TokensMintedEvent>;

export interface ArbitraryReputationUpdateEventObject {
  agent: string;
  user: string;
  skillId: BigNumber;
  amount: BigNumber;
}
export type ArbitraryReputationUpdateEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  ArbitraryReputationUpdateEventObject
>;

export type ArbitraryReputationUpdateEventFilter =
  TypedEventFilter<ArbitraryReputationUpdateEvent>;

export interface ExpenditureClaimDelaySetEventObject {
  agent: string;
  expenditureId: BigNumber;
  slot: BigNumber;
  claimDelay: BigNumber;
}
export type ExpenditureClaimDelaySetEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  ExpenditureClaimDelaySetEventObject
>;

export type ExpenditureClaimDelaySetEventFilter =
  TypedEventFilter<ExpenditureClaimDelaySetEvent>;

export interface ExpenditureGlobalClaimDelaySetEventObject {
  agent: string;
  globalClaimDelay: BigNumber;
}
export type ExpenditureGlobalClaimDelaySetEvent = TypedEvent<
  [string, BigNumber],
  ExpenditureGlobalClaimDelaySetEventObject
>;

export type ExpenditureGlobalClaimDelaySetEventFilter =
  TypedEventFilter<ExpenditureGlobalClaimDelaySetEvent>;

export interface ExpenditureLockedEventObject {
  agent: string;
  expenditureId: BigNumber;
}
export type ExpenditureLockedEvent = TypedEvent<
  [string, BigNumber],
  ExpenditureLockedEventObject
>;

export type ExpenditureLockedEventFilter =
  TypedEventFilter<ExpenditureLockedEvent>;

export interface ExpenditureMetadataSetEventObject {
  agent: string;
  expenditureId: BigNumber;
  metadata: string;
}
export type ExpenditureMetadataSetEvent = TypedEvent<
  [string, BigNumber, string],
  ExpenditureMetadataSetEventObject
>;

export type ExpenditureMetadataSetEventFilter =
  TypedEventFilter<ExpenditureMetadataSetEvent>;

export interface ExpenditurePayoutModifierSetEventObject {
  agent: string;
  expenditureId: BigNumber;
  slot: BigNumber;
  payoutModifier: BigNumber;
}
export type ExpenditurePayoutModifierSetEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber],
  ExpenditurePayoutModifierSetEventObject
>;

export type ExpenditurePayoutModifierSetEventFilter =
  TypedEventFilter<ExpenditurePayoutModifierSetEvent>;

export interface ColonyMetadataDeltaEventObject {
  agent: string;
  metadata: string;
}
export type ColonyMetadataDeltaEvent = TypedEvent<
  [string, string],
  ColonyMetadataDeltaEventObject
>;

export type ColonyMetadataDeltaEventFilter =
  TypedEventFilter<ColonyMetadataDeltaEvent>;

export interface DomainDeprecatedEventObject {
  agent: string;
  domainId: BigNumber;
  deprecated: boolean;
}
export type DomainDeprecatedEvent = TypedEvent<
  [string, BigNumber, boolean],
  DomainDeprecatedEventObject
>;

export type DomainDeprecatedEventFilter =
  TypedEventFilter<DomainDeprecatedEvent>;

export interface LocalSkillAddedEventObject {
  agent: string;
  localSkillId: BigNumber;
}
export type LocalSkillAddedEvent = TypedEvent<
  [string, BigNumber],
  LocalSkillAddedEventObject
>;

export type LocalSkillAddedEventFilter = TypedEventFilter<LocalSkillAddedEvent>;

export interface LocalSkillDeprecatedEventObject {
  agent: string;
  localSkillId: BigNumber;
  deprecated: boolean;
}
export type LocalSkillDeprecatedEvent = TypedEvent<
  [string, BigNumber, boolean],
  LocalSkillDeprecatedEventObject
>;

export type LocalSkillDeprecatedEventFilter =
  TypedEventFilter<LocalSkillDeprecatedEvent>;

export interface MetaTransactionExecutedEventObject {
  userAddress: string;
  relayerAddress: string;
  payload: string;
}
export type MetaTransactionExecutedEvent = TypedEvent<
  [string, string, string],
  MetaTransactionExecutedEventObject
>;

export type MetaTransactionExecutedEventFilter =
  TypedEventFilter<MetaTransactionExecutedEvent>;

export interface ColonyFundingRoleSetEventObject {
  user: string;
  setTo: boolean;
}
export type ColonyFundingRoleSetEvent = TypedEvent<
  [string, boolean],
  ColonyFundingRoleSetEventObject
>;

export type ColonyFundingRoleSetEventFilter =
  TypedEventFilter<ColonyFundingRoleSetEvent>;

export interface ColonyAdministrationRoleSetEventObject {
  user: string;
  setTo: boolean;
}
export type ColonyAdministrationRoleSetEvent = TypedEvent<
  [string, boolean],
  ColonyAdministrationRoleSetEventObject
>;

export type ColonyAdministrationRoleSetEventFilter =
  TypedEventFilter<ColonyAdministrationRoleSetEvent>;

export interface ColonyArchitectureRoleSetEventObject {
  user: string;
  setTo: boolean;
}
export type ColonyArchitectureRoleSetEvent = TypedEvent<
  [string, boolean],
  ColonyArchitectureRoleSetEventObject
>;

export type ColonyArchitectureRoleSetEventFilter =
  TypedEventFilter<ColonyArchitectureRoleSetEvent>;

export interface ColonyRootRoleSetEventObject {
  user: string;
  setTo: boolean;
}
export type ColonyRootRoleSetEvent = TypedEvent<
  [string, boolean],
  ColonyRootRoleSetEventObject
>;

export type ColonyRootRoleSetEventFilter =
  TypedEventFilter<ColonyRootRoleSetEvent>;

export interface ExpenditureStateChangedEventObject {
  agent: string;
  expenditureId: BigNumber;
  storageSlot: BigNumber;
  mask: boolean[];
  keys: string[];
  value: string;
}
export type ExpenditureStateChangedEvent = TypedEvent<
  [string, BigNumber, BigNumber, boolean[], string[], string],
  ExpenditureStateChangedEventObject
>;

export type ExpenditureStateChangedEventFilter =
  TypedEventFilter<ExpenditureStateChangedEvent>;

export interface ArbitraryTransactionEventObject {
  target: string;
  data: string;
  success: boolean;
}
export type ArbitraryTransactionEvent = TypedEvent<
  [string, string, boolean],
  ArbitraryTransactionEventObject
>;

export type ArbitraryTransactionEventFilter =
  TypedEventFilter<ArbitraryTransactionEvent>;

export interface IColonyEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IColonyEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ColonyInitialised(address,address)"(
      colonyNetwork?: null,
      token?: null
    ): ColonyInitialised_address_address_EventFilter;
    "ColonyInitialised(address,address,address)"(
      agent?: null,
      colonyNetwork?: null,
      token?: null
    ): ColonyInitialised_address_address_address_EventFilter;
    "ColonyBootstrapped(address[],int256[])"(
      users?: null,
      amounts?: null
    ): ColonyBootstrapped_address_array_int256_array_EventFilter;
    "ColonyBootstrapped(address,address[],int256[])"(
      agent?: null,
      users?: null,
      amounts?: null
    ): ColonyBootstrapped_address_address_array_int256_array_EventFilter;
    "ColonyUpgraded(uint256,uint256)"(
      oldVersion?: null,
      newVersion?: null
    ): ColonyUpgraded_uint256_uint256_EventFilter;
    "ColonyUpgraded(address,uint256,uint256)"(
      agent?: null,
      oldVersion?: null,
      newVersion?: null
    ): ColonyUpgraded_address_uint256_uint256_EventFilter;
    "ColonyRoleSet(address,uint256,uint8,bool)"(
      user?: string | null,
      domainId?: BigNumberish | null,
      role?: BigNumberish | null,
      setTo?: null
    ): ColonyRoleSet_address_uint256_uint8_bool_EventFilter;
    "ColonyRoleSet(address,address,uint256,uint8,bool)"(
      agent?: null,
      user?: string | null,
      domainId?: BigNumberish | null,
      role?: BigNumberish | null,
      setTo?: null
    ): ColonyRoleSet_address_address_uint256_uint8_bool_EventFilter;
    "ColonyFundsMovedBetweenFundingPots(uint256,uint256,uint256,address)"(
      fromPot?: BigNumberish | null,
      toPot?: BigNumberish | null,
      amount?: null,
      token?: null
    ): ColonyFundsMovedBetweenFundingPots_uint256_uint256_uint256_address_EventFilter;
    "ColonyFundsMovedBetweenFundingPots(address,uint256,uint256,uint256,address)"(
      agent?: null,
      fromPot?: BigNumberish | null,
      toPot?: BigNumberish | null,
      amount?: null,
      token?: null
    ): ColonyFundsMovedBetweenFundingPots_address_uint256_uint256_uint256_address_EventFilter;
    "ColonyFundsClaimed(address,uint256,uint256)"(
      token?: null,
      fee?: null,
      payoutRemainder?: null
    ): ColonyFundsClaimed_address_uint256_uint256_EventFilter;
    "ColonyFundsClaimed(address,address,uint256,uint256)"(
      agent?: null,
      token?: null,
      fee?: null,
      payoutRemainder?: null
    ): ColonyFundsClaimed_address_address_uint256_uint256_EventFilter;
    "RewardPayoutCycleStarted(uint256)"(
      rewardPayoutId?: null
    ): RewardPayoutCycleStarted_uint256_EventFilter;
    "RewardPayoutCycleStarted(address,uint256)"(
      agent?: null,
      rewardPayoutId?: null
    ): RewardPayoutCycleStarted_address_uint256_EventFilter;
    "RewardPayoutCycleEnded(uint256)"(
      rewardPayoutId?: null
    ): RewardPayoutCycleEnded_uint256_EventFilter;
    "RewardPayoutCycleEnded(address,uint256)"(
      agent?: null,
      rewardPayoutId?: null
    ): RewardPayoutCycleEnded_address_uint256_EventFilter;

    "RewardPayoutClaimed(uint256,address,uint256,uint256)"(
      rewardPayoutId?: null,
      user?: null,
      fee?: null,
      rewardRemainder?: null
    ): RewardPayoutClaimedEventFilter;
    RewardPayoutClaimed(
      rewardPayoutId?: null,
      user?: null,
      fee?: null,
      rewardRemainder?: null
    ): RewardPayoutClaimedEventFilter;

    "ColonyRewardInverseSet(uint256)"(
      rewardInverse?: null
    ): ColonyRewardInverseSet_uint256_EventFilter;
    "ColonyRewardInverseSet(address,uint256)"(
      agent?: null,
      rewardInverse?: null
    ): ColonyRewardInverseSet_address_uint256_EventFilter;
    "PaymentAdded(uint256)"(paymentId?: null): PaymentAdded_uint256_EventFilter;
    "PaymentAdded(address,uint256)"(
      agent?: null,
      paymentId?: null
    ): PaymentAdded_address_uint256_EventFilter;
    "TaskAdded(uint256)"(taskId?: null): TaskAdded_uint256_EventFilter;
    "TaskAdded(address,uint256)"(
      agent?: null,
      taskId?: null
    ): TaskAdded_address_uint256_EventFilter;

    "TaskBriefSet(uint256,bytes32)"(
      taskId?: BigNumberish | null,
      specificationHash?: null
    ): TaskBriefSetEventFilter;
    TaskBriefSet(
      taskId?: BigNumberish | null,
      specificationHash?: null
    ): TaskBriefSetEventFilter;

    "TaskDueDateSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      dueDate?: null
    ): TaskDueDateSetEventFilter;
    TaskDueDateSet(
      taskId?: BigNumberish | null,
      dueDate?: null
    ): TaskDueDateSetEventFilter;

    "TaskDomainSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      domainId?: BigNumberish | null
    ): TaskDomainSetEventFilter;
    TaskDomainSet(
      taskId?: BigNumberish | null,
      domainId?: BigNumberish | null
    ): TaskDomainSetEventFilter;

    "TaskSkillSet(uint256,uint256)"(
      taskId?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): TaskSkillSetEventFilter;
    TaskSkillSet(
      taskId?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): TaskSkillSetEventFilter;

    "TaskRoleUserSet(uint256,uint8,address)"(
      taskId?: BigNumberish | null,
      role?: null,
      user?: string | null
    ): TaskRoleUserSetEventFilter;
    TaskRoleUserSet(
      taskId?: BigNumberish | null,
      role?: null,
      user?: string | null
    ): TaskRoleUserSetEventFilter;

    "TaskPayoutSet(uint256,uint8,address,uint256)"(
      taskId?: BigNumberish | null,
      role?: null,
      token?: null,
      amount?: null
    ): TaskPayoutSetEventFilter;
    TaskPayoutSet(
      taskId?: BigNumberish | null,
      role?: null,
      token?: null,
      amount?: null
    ): TaskPayoutSetEventFilter;

    "TaskDeliverableSubmitted(uint256,bytes32)"(
      taskId?: BigNumberish | null,
      deliverableHash?: null
    ): TaskDeliverableSubmitted_uint256_bytes32_EventFilter;
    "TaskDeliverableSubmitted(address,uint256,bytes32)"(
      agent?: null,
      taskId?: BigNumberish | null,
      deliverableHash?: null
    ): TaskDeliverableSubmitted_address_uint256_bytes32_EventFilter;
    "TaskCompleted(uint256)"(
      taskId?: BigNumberish | null
    ): TaskCompleted_uint256_EventFilter;
    "TaskCompleted(address,uint256)"(
      agent?: null,
      taskId?: BigNumberish | null
    ): TaskCompleted_address_uint256_EventFilter;
    "TaskWorkRatingRevealed(uint256,uint8,uint8)"(
      taskId?: BigNumberish | null,
      role?: null,
      rating?: null
    ): TaskWorkRatingRevealed_uint256_uint8_uint8_EventFilter;
    "TaskWorkRatingRevealed(address,uint256,uint8,uint8)"(
      agent?: null,
      taskId?: BigNumberish | null,
      role?: null,
      rating?: null
    ): TaskWorkRatingRevealed_address_uint256_uint8_uint8_EventFilter;
    "TaskFinalized(uint256)"(
      taskId?: BigNumberish | null
    ): TaskFinalized_uint256_EventFilter;
    "TaskFinalized(address,uint256)"(
      agent?: null,
      taskId?: BigNumberish | null
    ): TaskFinalized_address_uint256_EventFilter;
    "PayoutClaimed(uint256,address,uint256)"(
      fundingPotId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PayoutClaimed_uint256_address_uint256_EventFilter;
    "PayoutClaimed(address,uint256,address,uint256)"(
      agent?: null,
      fundingPotId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PayoutClaimed_address_uint256_address_uint256_EventFilter;

    "TaskCanceled(uint256)"(
      taskId?: BigNumberish | null
    ): TaskCanceledEventFilter;
    TaskCanceled(taskId?: BigNumberish | null): TaskCanceledEventFilter;

    "DomainAdded(uint256)"(domainId?: null): DomainAdded_uint256_EventFilter;
    "DomainAdded(address,uint256)"(
      agent?: null,
      domainId?: null
    ): DomainAdded_address_uint256_EventFilter;

    "FundingPotAdded(uint256)"(fundingPotId?: null): FundingPotAddedEventFilter;
    FundingPotAdded(fundingPotId?: null): FundingPotAddedEventFilter;

    "RecoveryRoleSet(address,bool)"(
      user?: string | null,
      setTo?: null
    ): RecoveryRoleSetEventFilter;
    RecoveryRoleSet(
      user?: string | null,
      setTo?: null
    ): RecoveryRoleSetEventFilter;

    "ExpenditureAdded(uint256)"(
      expenditureId?: null
    ): ExpenditureAdded_uint256_EventFilter;
    "ExpenditureAdded(address,uint256)"(
      agent?: null,
      expenditureId?: null
    ): ExpenditureAdded_address_uint256_EventFilter;
    "ExpenditureTransferred(uint256,address)"(
      expenditureId?: BigNumberish | null,
      owner?: string | null
    ): ExpenditureTransferred_uint256_address_EventFilter;
    "ExpenditureTransferred(address,uint256,address)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      owner?: string | null
    ): ExpenditureTransferred_address_uint256_address_EventFilter;
    "ExpenditureCancelled(uint256)"(
      expenditureId?: BigNumberish | null
    ): ExpenditureCancelled_uint256_EventFilter;
    "ExpenditureCancelled(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureCancelled_address_uint256_EventFilter;
    "ExpenditureFinalized(uint256)"(
      expenditureId?: BigNumberish | null
    ): ExpenditureFinalized_uint256_EventFilter;
    "ExpenditureFinalized(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureFinalized_address_uint256_EventFilter;
    "ExpenditureRecipientSet(uint256,uint256,address)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      recipient?: string | null
    ): ExpenditureRecipientSet_uint256_uint256_address_EventFilter;
    "ExpenditureRecipientSet(address,uint256,uint256,address)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      recipient?: string | null
    ): ExpenditureRecipientSet_address_uint256_uint256_address_EventFilter;
    "ExpenditureSkillSet(uint256,uint256,uint256)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): ExpenditureSkillSet_uint256_uint256_uint256_EventFilter;
    "ExpenditureSkillSet(address,uint256,uint256,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      skillId?: BigNumberish | null
    ): ExpenditureSkillSet_address_uint256_uint256_uint256_EventFilter;
    "ExpenditurePayoutSet(uint256,uint256,address,uint256)"(
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      token?: string | null,
      amount?: null
    ): ExpenditurePayoutSet_uint256_uint256_address_uint256_EventFilter;
    "ExpenditurePayoutSet(address,uint256,uint256,address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      token?: string | null,
      amount?: null
    ): ExpenditurePayoutSet_address_uint256_uint256_address_uint256_EventFilter;

    "Annotation(address,bytes32,string)"(
      agent?: string | null,
      txHash?: BytesLike | null,
      metadata?: null
    ): AnnotationEventFilter;
    Annotation(
      agent?: string | null,
      txHash?: BytesLike | null,
      metadata?: null
    ): AnnotationEventFilter;

    "ColonyMetadata(address,string)"(
      agent?: null,
      metadata?: null
    ): ColonyMetadataEventFilter;
    ColonyMetadata(agent?: null, metadata?: null): ColonyMetadataEventFilter;

    "DomainMetadata(address,uint256,string)"(
      agent?: null,
      domainId?: BigNumberish | null,
      metadata?: null
    ): DomainMetadataEventFilter;
    DomainMetadata(
      agent?: null,
      domainId?: BigNumberish | null,
      metadata?: null
    ): DomainMetadataEventFilter;

    "PaymentFinalized(address,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null
    ): PaymentFinalizedEventFilter;
    PaymentFinalized(
      agent?: null,
      paymentId?: BigNumberish | null
    ): PaymentFinalizedEventFilter;

    "PaymentPayoutSet(address,uint256,address,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PaymentPayoutSetEventFilter;
    PaymentPayoutSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      token?: null,
      amount?: null
    ): PaymentPayoutSetEventFilter;

    "PaymentRecipientSet(address,uint256,address)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      recipient?: null
    ): PaymentRecipientSetEventFilter;
    PaymentRecipientSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      recipient?: null
    ): PaymentRecipientSetEventFilter;

    "PaymentSkillSet(address,uint256,uint256)"(
      agent?: null,
      paymentId?: BigNumberish | null,
      skillId?: null
    ): PaymentSkillSetEventFilter;
    PaymentSkillSet(
      agent?: null,
      paymentId?: BigNumberish | null,
      skillId?: null
    ): PaymentSkillSetEventFilter;

    "RecoveryModeEntered(address)"(user?: null): RecoveryModeEnteredEventFilter;
    RecoveryModeEntered(user?: null): RecoveryModeEnteredEventFilter;

    "RecoveryModeExitApproved(address)"(
      user?: null
    ): RecoveryModeExitApprovedEventFilter;
    RecoveryModeExitApproved(user?: null): RecoveryModeExitApprovedEventFilter;

    "RecoveryModeExited(address)"(user?: null): RecoveryModeExitedEventFilter;
    RecoveryModeExited(user?: null): RecoveryModeExitedEventFilter;

    "RecoveryStorageSlotSet(address,uint256,bytes32,bytes32)"(
      user?: null,
      slot?: null,
      fromValue?: null,
      toValue?: null
    ): RecoveryStorageSlotSetEventFilter;
    RecoveryStorageSlotSet(
      user?: null,
      slot?: null,
      fromValue?: null,
      toValue?: null
    ): RecoveryStorageSlotSetEventFilter;

    "TaskChangedViaSignatures(address[])"(
      reviewerAddresses?: null
    ): TaskChangedViaSignaturesEventFilter;
    TaskChangedViaSignatures(
      reviewerAddresses?: null
    ): TaskChangedViaSignaturesEventFilter;

    "TokenUnlocked()"(): TokenUnlocked__EventFilter;
    "TokenUnlocked(address)"(agent?: null): TokenUnlocked_address_EventFilter;

    "TokensBurned(address,address,uint256)"(
      agent?: null,
      token?: null,
      amount?: null
    ): TokensBurnedEventFilter;
    TokensBurned(
      agent?: null,
      token?: null,
      amount?: null
    ): TokensBurnedEventFilter;

    "TokensMinted(address,address,uint256)"(
      agent?: null,
      who?: null,
      amount?: null
    ): TokensMintedEventFilter;
    TokensMinted(
      agent?: null,
      who?: null,
      amount?: null
    ): TokensMintedEventFilter;

    "ArbitraryReputationUpdate(address,address,uint256,int256)"(
      agent?: null,
      user?: null,
      skillId?: null,
      amount?: null
    ): ArbitraryReputationUpdateEventFilter;
    ArbitraryReputationUpdate(
      agent?: null,
      user?: null,
      skillId?: null,
      amount?: null
    ): ArbitraryReputationUpdateEventFilter;

    "ExpenditureClaimDelaySet(address,uint256,uint256,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      claimDelay?: null
    ): ExpenditureClaimDelaySetEventFilter;
    ExpenditureClaimDelaySet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      claimDelay?: null
    ): ExpenditureClaimDelaySetEventFilter;

    "ExpenditureGlobalClaimDelaySet(address,uint256)"(
      agent?: null,
      globalClaimDelay?: null
    ): ExpenditureGlobalClaimDelaySetEventFilter;
    ExpenditureGlobalClaimDelaySet(
      agent?: null,
      globalClaimDelay?: null
    ): ExpenditureGlobalClaimDelaySetEventFilter;

    "ExpenditureLocked(address,uint256)"(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureLockedEventFilter;
    ExpenditureLocked(
      agent?: null,
      expenditureId?: BigNumberish | null
    ): ExpenditureLockedEventFilter;

    "ExpenditureMetadataSet(address,uint256,string)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      metadata?: null
    ): ExpenditureMetadataSetEventFilter;
    ExpenditureMetadataSet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      metadata?: null
    ): ExpenditureMetadataSetEventFilter;

    "ExpenditurePayoutModifierSet(address,uint256,uint256,int256)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      payoutModifier?: null
    ): ExpenditurePayoutModifierSetEventFilter;
    ExpenditurePayoutModifierSet(
      agent?: null,
      expenditureId?: BigNumberish | null,
      slot?: BigNumberish | null,
      payoutModifier?: null
    ): ExpenditurePayoutModifierSetEventFilter;

    "ColonyMetadataDelta(address,string)"(
      agent?: null,
      metadata?: null
    ): ColonyMetadataDeltaEventFilter;
    ColonyMetadataDelta(
      agent?: null,
      metadata?: null
    ): ColonyMetadataDeltaEventFilter;

    "DomainDeprecated(address,uint256,bool)"(
      agent?: null,
      domainId?: BigNumberish | null,
      deprecated?: null
    ): DomainDeprecatedEventFilter;
    DomainDeprecated(
      agent?: null,
      domainId?: BigNumberish | null,
      deprecated?: null
    ): DomainDeprecatedEventFilter;

    "LocalSkillAdded(address,uint256)"(
      agent?: null,
      localSkillId?: null
    ): LocalSkillAddedEventFilter;
    LocalSkillAdded(
      agent?: null,
      localSkillId?: null
    ): LocalSkillAddedEventFilter;

    "LocalSkillDeprecated(address,uint256,bool)"(
      agent?: null,
      localSkillId?: null,
      deprecated?: null
    ): LocalSkillDeprecatedEventFilter;
    LocalSkillDeprecated(
      agent?: null,
      localSkillId?: null,
      deprecated?: null
    ): LocalSkillDeprecatedEventFilter;

    "MetaTransactionExecuted(address,address,bytes)"(
      userAddress?: null,
      relayerAddress?: null,
      payload?: null
    ): MetaTransactionExecutedEventFilter;
    MetaTransactionExecuted(
      userAddress?: null,
      relayerAddress?: null,
      payload?: null
    ): MetaTransactionExecutedEventFilter;

    "ColonyFundingRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyFundingRoleSetEventFilter;
    ColonyFundingRoleSet(
      user?: null,
      setTo?: null
    ): ColonyFundingRoleSetEventFilter;

    "ColonyAdministrationRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyAdministrationRoleSetEventFilter;
    ColonyAdministrationRoleSet(
      user?: null,
      setTo?: null
    ): ColonyAdministrationRoleSetEventFilter;

    "ColonyArchitectureRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyArchitectureRoleSetEventFilter;
    ColonyArchitectureRoleSet(
      user?: null,
      setTo?: null
    ): ColonyArchitectureRoleSetEventFilter;

    "ColonyRootRoleSet(address,bool)"(
      user?: null,
      setTo?: null
    ): ColonyRootRoleSetEventFilter;
    ColonyRootRoleSet(user?: null, setTo?: null): ColonyRootRoleSetEventFilter;

    "ExpenditureStateChanged(address,uint256,uint256,bool[],bytes32[],bytes32)"(
      agent?: null,
      expenditureId?: BigNumberish | null,
      storageSlot?: BigNumberish | null,
      mask?: null,
      keys?: null,
      value?: null
    ): ExpenditureStateChangedEventFilter;
    ExpenditureStateChanged(
      agent?: null,
      expenditureId?: BigNumberish | null,
      storageSlot?: BigNumberish | null,
      mask?: null,
      keys?: null,
      value?: null
    ): ExpenditureStateChangedEventFilter;

    "ArbitraryTransaction(address,bytes,bool)"(
      target?: null,
      data?: null,
      success?: null
    ): ArbitraryTransactionEventFilter;
    ArbitraryTransaction(
      target?: null,
      data?: null,
      success?: null
    ): ArbitraryTransactionEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
