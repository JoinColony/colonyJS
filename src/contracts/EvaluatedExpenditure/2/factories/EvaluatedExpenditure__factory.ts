/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvaluatedExpenditure,
  EvaluatedExpenditureInterface,
} from "../EvaluatedExpenditure";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "ExtensionInitialised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "LogSetAuthority",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LogSetOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract DSAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_sig",
        type: "bytes4",
      },
    ],
    name: "getCapabilityRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getColony",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DSAuthority",
        name: "authority_",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_sigV",
        type: "uint8",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "identifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colony",
        type: "address",
      },
    ],
    name: "install",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_deprecated",
        type: "bool",
      },
    ],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getMetatransactionNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_permissionDomainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_childSkillIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_slots",
        type: "uint256[]",
      },
      {
        internalType: "int256[]",
        name: "_payoutModifiers",
        type: "int256[]",
      },
    ],
    name: "setExpenditurePayoutModifiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26115628061005e6000396000f3fe6080604052600436106101095760003560e01c80636281133d116100955780639251cff4116100645780639251cff41461029e578063b3eac1d8146102be578063bf7e214f146102de578063bfd68ab7146102f3578063fcf6ba931461030857610109565b80636281133d1461021a5780637998a1c4146102475780637a9e5e4b1461025c5780638da5cb5b1461027c57610109565b80632a1b8f9b116100dc5780632a1b8f9b1461018e5780632dfbb083146101ae5780633408e470146101db578063340df28f146101f057806354fd4d501461020557610109565b80630c53c51c1461010e5780630cdb1c9e146101375780630d638f301461015957806313af40351461016e575b600080fd5b61012161011c366004610dad565b61031d565b60405161012e9190611238565b60405180910390f35b34801561014357600080fd5b50610157610152366004610f88565b610479565b005b34801561016557600080fd5b506101576106da565b34801561017a57600080fd5b50610157610189366004610d8a565b61071a565b34801561019a57600080fd5b506101576101a9366004610d8a565b61079c565b3480156101ba57600080fd5b506101ce6101c9366004610edc565b610819565b60405161012e9190611211565b3480156101e757600080fd5b506101ce610821565b3480156101fc57600080fd5b50610157610826565b34801561021157600080fd5b506101ce61085a565b34801561022657600080fd5b5061023a610235366004610e1f565b61085f565b60405161012e9190611206565b34801561025357600080fd5b506101ce61092f565b34801561026857600080fd5b50610157610277366004610d8a565b610953565b34801561028857600080fd5b506102916109d1565b60405161012e9190611190565b3480156102aa57600080fd5b506101576102b9366004610ea4565b6109e0565b3480156102ca57600080fd5b506101ce6102d9366004610d8a565b610a30565b3480156102ea57600080fd5b50610291610a4b565b3480156102ff57600080fd5b50610291610a5a565b34801561031457600080fd5b5061023a610a69565b606061033d8661032c88610a30565b610334610821565b8888888861085f565b6103625760405162461bcd60e51b815260040161035990611326565b60405180910390fd5b61036b86610a79565b60006060306001600160a01b0316877f02bcc191e283bfba76a1369ec8ba06566f33010645097c104c312753e04935e88a6040516020016103ae939291906110e0565b60408051601f19818403018152908290526103c8916110c4565b6000604051808303816000865af19150503d8060008114610405576040519150601f19603f3d011682016040523d82523d6000602084013e61040a565b606091505b50915091508161042c5760405162461bcd60e51b81526004016103599061124b565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b88610456610ab9565b89604051610466939291906111a4565b60405180910390a1979650505050505050565b805182511461049a5760405162461bcd60e51b8152600401610359906113a6565b6104a2610ab9565b6003546040516374b556c360e11b81526001600160a01b03928316929091169063e96aad86906104d6908790600401611211565b60c06040518083038186803b1580156104ee57600080fd5b505afa158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610f04565b602001516001600160a01b0316146105505760405162461bcd60e51b8152600401610359906112c1565b6040805160028082526060808301845292602083019080368337505060408051600280825260608083018452949550909250906020830190803683370190505090506000826000815181106105a157fe5b6020026020010190151590811515815250506001826001815181106105c257fe5b602002602001019015159081151581525050600260001b816001815181106105e657fe5b60200260200101818152505060005b84518110156106d05784818151811061060a57fe5b602002602001015160001b8260008151811061062257fe5b602002602001018181525050600360009054906101000a90046001600160a01b03166001600160a01b031663c9a2ce7c898989601a88888b898151811061066557fe5b602002602001015160001b6040518863ffffffff1660e01b81526004016106929796959493929190611414565b600060405180830381600087803b1580156106ac57600080fd5b505af11580156106c0573d6000803e3d6000fd5b5050600190920191506105f59050565b5050505050505050565b6106f0336000356001600160e01b031916610b68565b61070c5760405162461bcd60e51b815260040161035990611293565b6003546001600160a01b0316ff5b610730336000356001600160e01b031916610b68565b61074c5760405162461bcd60e51b815260040161035990611293565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b6107b2336000356001600160e01b031916610b68565b6107ce5760405162461bcd60e51b815260040161035990611293565b6003546001600160a01b0316156107f75760405162461bcd60e51b81526004016103599061136f565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60005b919050565b465b90565b61083c336000356001600160e01b031916610b68565b6108585760405162461bcd60e51b815260040161035990611293565b565b600290565b6000806108978830898960405160200161087c949392919061114a565b60405160208183030381529060405280519060200120610c46565b90506000600182858888604051600081526020016040526040516108be949392919061121a565b6020604051602081039080840390855afa1580156108e0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166109135760405162461bcd60e51b8152600401610359906113dd565b6001600160a01b038a8116911614915050979650505050505050565b7f8e56ac357938e7176705a348504de31845e231856e1613af97c5063a8fca53c590565b610969336000356001600160e01b031916610b68565b6109855760405162461bcd60e51b815260040161035990611293565b600080546001600160a01b0319166001600160a01b03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6001546001600160a01b031681565b6109f6336000356001600160e01b031916610b68565b610a125760405162461bcd60e51b815260040161035990611293565b60038054911515600160a01b0260ff60a01b19909216919091179055565b6001600160a01b031660009081526004602052604090205490565b6000546001600160a01b031681565b6003546001600160a01b031690565b600354600160a01b900460ff1690565b6001600160a01b038116600090815260046020526040902054610a9d906001610c76565b6001600160a01b03909116600090815260046020526040902055565b6000363330148015610acc575060348110155b15610b5b5760606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505082810160131901519091507f02bcc191e283bfba76a1369ec8ba06566f33010645097c104c312753e04935e88114610b4757339350505050610823565b508101516001600160a01b03169150610b64565b33915050610823565b5090565b60006001600160a01b038316301415610b8357506001610c40565b6001546001600160a01b0384811691161415610ba157506001610c40565b6000546001600160a01b0316610bb957506000610c40565b60005460405163b700961360e01b81526001600160a01b039091169063b700961390610bed908690309087906004016111d9565b60206040518083038186803b158015610c0557600080fd5b505afa158015610c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3d9190610ec0565b90505b92915050565b600081604051602001610c599190611119565b604051602081830303815290604052805190602001209050919050565b80820182811015610c405760405162461bcd60e51b8152600401610359906112f8565b805161081c81611506565b600082601f830112610cb4578081fd5b8135610cc7610cc2826114b8565b611494565b818152915060208083019084810181840286018201871015610ce857600080fd5b60005b84811015610d0757813584529282019290820190600101610ceb565b505050505092915050565b600082601f830112610d22578081fd5b813567ffffffffffffffff811115610d3657fe5b610d49601f8201601f1916602001611494565b9150808252836020828501011115610d6057600080fd5b8060208401602084013760009082016020015292915050565b803560ff8116811461081c57600080fd5b600060208284031215610d9b578081fd5b8135610da681611506565b9392505050565b600080600080600060a08688031215610dc4578081fd5b8535610dcf81611506565b9450602086013567ffffffffffffffff811115610dea578182fd5b610df688828901610d12565b9450506040860135925060608601359150610e1360808701610d79565b90509295509295909350565b600080600080600080600060e0888a031215610e39578182fd5b8735610e4481611506565b96506020880135955060408801359450606088013567ffffffffffffffff811115610e6d578283fd5b610e798a828b01610d12565b9450506080880135925060a08801359150610e9660c08901610d79565b905092959891949750929550565b600060208284031215610eb5578081fd5b8135610da68161151e565b600060208284031215610ed1578081fd5b8151610da68161151e565b600060208284031215610eed578081fd5b81356001600160e01b031981168114610da6578182fd5b600060c08284031215610f15578081fd5b60405160c0810181811067ffffffffffffffff82111715610f3257fe5b604052825160048110610f43578283fd5b8152610f5160208401610c99565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600080600080600060a08688031215610f9f578283fd5b85359450602080870135945060408701359350606087013567ffffffffffffffff80821115610fcc578384fd5b818901915089601f830112610fdf578384fd5b8135610fed610cc2826114b8565b81815284810190848601868402860187018e1015611009578788fd5b8795505b8386101561102b57803583526001959095019491860191860161100d565b50965050506080890135925080831115611043578384fd5b505061105188828901610ca4565b9150509295509295909350565b6000815180845260208085019450808401835b8381101561108d57815187529582019590820190600101611071565b509495945050505050565b600081518084526110b08160208601602086016114d6565b601f01601f19169290920160200192915050565b600082516110d68184602087016114d6565b9190910192915050565b600084516110f28184602089016114d6565b919091019283525060601b6bffffffffffffffffffffffff19166020820152603401919050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60008582526bffffffffffffffffffffffff198560601b16602083015283603483015282516111808160548501602087016114d6565b9190910160540195945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b038481168252831660208201526060604082018190526000906111d090830184611098565b95945050505050565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b901515815260200190565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b600060208252610da66020830184611098565b60208082526028908201527f636f6c6f6e792d6d65746174782d66756e6374696f6e2d63616c6c2d756e737560408201526718d8d95cdcd99d5b60c21b606082015260800190565b602080825260149082015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604082015260600190565b6020808252601f908201527f6576616c75617465642d657870656e6469747572652d6e6f742d6f776e657200604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b60208082526029908201527f6d6574617472616e73616374696f6e2d7369676e65722d7369676e617475726560408201526805adad2e6dac2e8c6d60bb1b606082015260800190565b6020808252601b908201527f657874656e73696f6e2d616c72656164792d696e7374616c6c65640000000000604082015260600190565b6020808252601f908201527f6576616c75617465642d657870656e6469747572652d6261642d736c6f747300604082015260600190565b6020808252601f908201527f636f6c6f6e792d6d65746174782d696e76616c69642d7369676e617475726500604082015260600190565b600060e082018983526020898185015288604085015287606085015260e06080850152818751808452610100860191508289019350845b8181101561146957845115158352938301939183019160010161144b565b505084810360a086015261147d818861105e565b93505050508260c083015298975050505050505050565b60405181810167ffffffffffffffff811182821017156114b057fe5b604052919050565b600067ffffffffffffffff8211156114cc57fe5b5060209081020190565b60005b838110156114f15781810151838201526020016114d9565b83811115611500576000848401525b50505050565b6001600160a01b038116811461151b57600080fd5b50565b801515811461151b57600080fdfea2646970667358221220282d097dae4c14d345a0976b2c9dc59cae7808da91d01f88ecaf8eef499957ce64736f6c63430007030033";

type EvaluatedExpenditureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EvaluatedExpenditureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EvaluatedExpenditure__factory extends ContractFactory {
  constructor(...args: EvaluatedExpenditureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvaluatedExpenditure> {
    return super.deploy(overrides || {}) as Promise<EvaluatedExpenditure>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EvaluatedExpenditure {
    return super.attach(address) as EvaluatedExpenditure;
  }
  override connect(signer: Signer): EvaluatedExpenditure__factory {
    return super.connect(signer) as EvaluatedExpenditure__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvaluatedExpenditureInterface {
    return new utils.Interface(_abi) as EvaluatedExpenditureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvaluatedExpenditure {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EvaluatedExpenditure;
  }
}
