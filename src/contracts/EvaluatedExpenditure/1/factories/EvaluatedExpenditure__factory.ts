/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EvaluatedExpenditure,
  EvaluatedExpenditureInterface,
} from "../EvaluatedExpenditure";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "ExtensionInitialised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "LogSetAuthority",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LogSetOwner",
    type: "event",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract DSAuthority",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_sig",
        type: "bytes4",
      },
    ],
    name: "getCapabilityRoles",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getColony",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DSAuthority",
        name: "authority_",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "identifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_colony",
        type: "address",
      },
    ],
    name: "install",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finishUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_deprecated",
        type: "bool",
      },
    ],
    name: "deprecate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uninstall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_permissionDomainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_childSkillIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_slots",
        type: "uint256[]",
      },
      {
        internalType: "int256[]",
        name: "_payoutModifiers",
        type: "int256[]",
      },
    ],
    name: "setExpenditurePayoutModifiers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a2610c948061005e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637998a1c41161008c5780639251cff4116100665780639251cff41461019b578063bf7e214f146101ae578063bfd68ab7146101b6578063fcf6ba93146101be576100ea565b80637998a1c41461016b5780637a9e5e4b146101735780638da5cb5b14610186576100ea565b80632a1b8f9b116100c85780632a1b8f9b1461011f5780632dfbb08314610132578063340df28f1461015b57806354fd4d5014610163576100ea565b80630cdb1c9e146100ef5780630d638f301461010457806313af40351461010c575b600080fd5b6101026100fd36600461093e565b6101d3565b005b610102610431565b61010261011a366004610837565b610471565b61010261012d366004610837565b6104f3565b610145610140366004610892565b610570565b6040516101529190610a9a565b60405180910390f35b610102610578565b6101456105ac565b6101456105b1565b610102610181366004610837565b6105d5565b61018e610653565b6040516101529190610a4e565b6101026101a936600461085a565b610662565b61018e6106b2565b61018e6106c1565b6101c66106d0565b6040516101529190610a8f565b80518251146101fd5760405162461bcd60e51b81526004016101f490610b3f565b60405180910390fd5b6003546040516374b556c360e11b815233916001600160a01b03169063e96aad869061022d908790600401610a9a565b60c06040518083038186803b15801561024557600080fd5b505afa158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d91906108ba565b602001516001600160a01b0316146102a75760405162461bcd60e51b81526004016101f490610ad1565b6040805160028082526060808301845292602083019080368337505060408051600280825260608083018452949550909250906020830190803683370190505090506000826000815181106102f857fe5b60200260200101901515908115158152505060018260018151811061031957fe5b602002602001019015159081151581525050600260001b8160018151811061033d57fe5b60200260200101818152505060005b84518110156104275784818151811061036157fe5b602002602001015160001b8260008151811061037957fe5b602002602001018181525050600360009054906101000a90046001600160a01b03166001600160a01b031663c9a2ce7c898989601a88888b89815181106103bc57fe5b602002602001015160001b6040518863ffffffff1660e01b81526004016103e99796959493929190610b76565b600060405180830381600087803b15801561040357600080fd5b505af1158015610417573d6000803e3d6000fd5b50506001909201915061034c9050565b5050505050505050565b610447336000356001600160e01b0319166106e0565b6104635760405162461bcd60e51b81526004016101f490610aa3565b6003546001600160a01b0316ff5b610487336000356001600160e01b0319166106e0565b6104a35760405162461bcd60e51b81526004016101f490610aa3565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b610509336000356001600160e01b0319166106e0565b6105255760405162461bcd60e51b81526004016101f490610aa3565b6003546001600160a01b03161561054e5760405162461bcd60e51b81526004016101f490610b08565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60005b919050565b61058e336000356001600160e01b0319166106e0565b6105aa5760405162461bcd60e51b81526004016101f490610aa3565b565b600190565b7f8e56ac357938e7176705a348504de31845e231856e1613af97c5063a8fca53c590565b6105eb336000356001600160e01b0319166106e0565b6106075760405162461bcd60e51b81526004016101f490610aa3565b600080546001600160a01b0319166001600160a01b03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6001546001600160a01b031681565b610678336000356001600160e01b0319166106e0565b6106945760405162461bcd60e51b81526004016101f490610aa3565b60038054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031681565b6003546001600160a01b031690565b600354600160a01b900460ff1690565b60006001600160a01b0383163014156106fb575060016107b8565b6001546001600160a01b0384811691161415610719575060016107b8565b6000546001600160a01b0316610731575060006107b8565b60005460405163b700961360e01b81526001600160a01b039091169063b70096139061076590869030908790600401610a62565b60206040518083038186803b15801561077d57600080fd5b505afa158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b59190610876565b90505b92915050565b805161057381610c38565b600082601f8301126107d9578081fd5b81356107ec6107e782610c1a565b610bf6565b81815291506020808301908481018184028601820187101561080d57600080fd5b60005b8481101561082c57813584529282019290820190600101610810565b505050505092915050565b600060208284031215610848578081fd5b813561085381610c38565b9392505050565b60006020828403121561086b578081fd5b813561085381610c50565b600060208284031215610887578081fd5b815161085381610c50565b6000602082840312156108a3578081fd5b81356001600160e01b031981168114610853578182fd5b600060c082840312156108cb578081fd5b60405160c0810181811067ffffffffffffffff821117156108e857fe5b6040528251600481106108f9578283fd5b8152610907602084016107be565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600080600080600060a08688031215610955578081fd5b85359450602080870135945060408701359350606087013567ffffffffffffffff80821115610982578384fd5b818901915089601f830112610995578384fd5b81356109a36107e782610c1a565b81815284810190848601868402860187018e10156109bf578788fd5b8795505b838610156109e15780358352600195909501949186019186016109c3565b509650505060808901359250808311156109f9578384fd5b5050610a07888289016107c9565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610a4357815187529582019590820190600101610a27565b509495945050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b901515815260200190565b90815260200190565b602080825260149082015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604082015260600190565b6020808252601f908201527f6576616c75617465642d657870656e6469747572652d6e6f742d6f776e657200604082015260600190565b6020808252601b908201527f657874656e73696f6e2d616c72656164792d696e7374616c6c65640000000000604082015260600190565b6020808252601f908201527f6576616c75617465642d657870656e6469747572652d6261642d736c6f747300604082015260600190565b600060e082018983526020898185015288604085015287606085015260e06080850152818751808452610100860191508289019350845b81811015610bcb578451151583529383019391830191600101610bad565b505084810360a0860152610bdf8188610a14565b93505050508260c083015298975050505050505050565b60405181810167ffffffffffffffff81118282101715610c1257fe5b604052919050565b600067ffffffffffffffff821115610c2e57fe5b5060209081020190565b6001600160a01b0381168114610c4d57600080fd5b50565b8015158114610c4d57600080fdfea26469706673582212201f0b6729c2729a914aaa2f7f73a0499b9116d1befafa372a86c3c4783fb12c7664736f6c63430007030033";

type EvaluatedExpenditureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EvaluatedExpenditureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EvaluatedExpenditure__factory extends ContractFactory {
  constructor(...args: EvaluatedExpenditureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EvaluatedExpenditure> {
    return super.deploy(overrides || {}) as Promise<EvaluatedExpenditure>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EvaluatedExpenditure {
    return super.attach(address) as EvaluatedExpenditure;
  }
  override connect(signer: Signer): EvaluatedExpenditure__factory {
    return super.connect(signer) as EvaluatedExpenditure__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EvaluatedExpenditureInterface {
    return new utils.Interface(_abi) as EvaluatedExpenditureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EvaluatedExpenditure {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EvaluatedExpenditure;
  }
}
