/*
 * Whitelist Client Version 2 autogenerated by
 * @colony/colony-js version v4.1.2 from colonyNetwork tag 'flwss'
 *
 * Feel free to modify as needed!
 */

/* eslint-disable @typescript-eslint/no-explicit-any */

import { ClientType } from '../../../../constants';
import { Whitelist__factory as WhitelistFactory } from '../../../../contracts/extensions/whitelist/2/factories/Whitelist__factory';
import { Whitelist } from '../../../../contracts/extensions/whitelist/2/Whitelist';
import { ExtendedIColony } from '../../../../clients/Colony/extensions/commonExtensions';

import * as currentVersion from './WhitelistClientAddons';
import * as version1 from '../1/WhitelistClientAddons';

type WhitelistEstimate = Whitelist['estimate'];
interface WhitelistEstimateWithAddons extends WhitelistEstimate {
  /*
   * @TODO These needs to be specifically determined once we can integrate
   * static code analysis into this lib
   */
  [key: string]: any;
}

export interface WhitelistClient extends Whitelist {
  clientType: ClientType.WhitelistClient;
  estimate: WhitelistEstimateWithAddons;
  /*
   * @TODO These needs to be specifically determined once we can integrate
   * static code analysis into this lib
   */
  [key: string]: any;
}

const getWhitelistClient = (
  address: string,
  colonyClient: ExtendedIColony,
): WhitelistClient => {
  const whitelistClient = WhitelistFactory.connect(
    address,
    colonyClient.signer || colonyClient.provider,
  ) as WhitelistClient;
  whitelistClient.clientType = ClientType.WhitelistClient;

  const addons = {
    ...version1.getWhitelistClientAddons(whitelistClient, colonyClient),
    ...currentVersion.getWhitelistClientAddons(whitelistClient, colonyClient),
  };
  const addonsEstimate = {
    ...version1.getWhitelistClientEstimateAddons(whitelistClient, colonyClient),
    ...currentVersion.getWhitelistClientEstimateAddons(
      whitelistClient,
      colonyClient,
    ),
  };

  Object.keys(addons).map((addonName) => {
    whitelistClient[addonName] = addons[addonName];
    return null;
  });

  Object.keys(addonsEstimate).map((addonName) => {
    whitelistClient.estimate[addonName] = addonsEstimate[addonName];
    return null;
  });

  return whitelistClient;
};

export default getWhitelistClient;

/* eslint-enable */
