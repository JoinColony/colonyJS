{
    "contractName": "ENSRegistry",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "label",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "NewOwner",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                }
            ],
            "name": "NewResolver",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "ttl",
                    "type": "uint64"
                }
            ],
            "name": "NewTTL",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "setOwner",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32",
                    "name": "label",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "setSubnodeOwner",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "resolver",
                    "type": "address"
                }
            ],
            "name": "setResolver",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint64",
                    "name": "ttl",
                    "type": "uint64"
                }
            ],
            "name": "setTTL",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                }
            ],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                }
            ],
            "name": "resolver",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "node",
                    "type": "bytes32"
                }
            ],
            "name": "ttl",
            "outputs": [
                {
                    "internalType": "uint64",
                    "name": "",
                    "type": "uint64"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "bytecode": "0x608060405234801561001057600080fd5b5060008080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb580546001600160a01b0319163317905561068a806100596000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806314ab90381161005b57806314ab90381461010c57806316a25cbd146101395780631896f70a146101735780635b0fc9c31461019f5761007d565b80630178b8bf1461008257806302571be3146100bb57806306ab5923146100d8575b600080fd5b61009f6004803603602081101561009857600080fd5b50356101cb565b604080516001600160a01b039092168252519081900360200190f35b61009f600480360360208110156100d157600080fd5b50356101e9565b61010a600480360360608110156100ee57600080fd5b50803590602081013590604001356001600160a01b0316610204565b005b61010a6004803603604081101561012257600080fd5b508035906020013567ffffffffffffffff16610363565b6101566004803603602081101561014f57600080fd5b5035610451565b6040805167ffffffffffffffff9092168252519081900360200190f35b61010a6004803603604081101561018957600080fd5b50803590602001356001600160a01b0316610477565b61010a600480360360408110156101b557600080fd5b50803590602001356001600160a01b0316610557565b6000908152602081905260409020600101546001600160a01b031690565b6000908152602081905260409020546001600160a01b031690565b60008381526020819052604090205483906001600160a01b031680158061023357506001600160a01b03811633145b610272576040805162461bcd60e51b815260206004820152601b6024820152600080516020610635833981519152604482015290519081900360640190fd5b6000858152602081905260409020546001600160a01b03166102ca576040805162461bcd60e51b815260206004820152600c60248201526b756e6f776e65642d6e6f646560a01b604482015290519081900360640190fd5b60408051602080820188905281830187905282518083038401815260608301808552815191909201206001600160a01b0387169091529151869188917fce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e829181900360800190a3600090815260208190526040902080546001600160a01b0319166001600160a01b03949094169390931790925550505050565b60008281526020819052604090205482906001600160a01b031680158061039257506001600160a01b03811633145b6103d1576040805162461bcd60e51b815260206004820152601b6024820152600080516020610635833981519152604482015290519081900360640190fd5b6040805167ffffffffffffffff85168152905185917f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68919081900360200190a25050600091825260208290526040909120600101805467ffffffffffffffff909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b600090815260208190526040902060010154600160a01b900467ffffffffffffffff1690565b60008281526020819052604090205482906001600160a01b03168015806104a657506001600160a01b03811633145b6104e5576040805162461bcd60e51b815260206004820152601b6024820152600080516020610635833981519152604482015290519081900360640190fd5b604080516001600160a01b0385168152905185917f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0919081900360200190a2505060009182526020829052604090912060010180546001600160a01b0319166001600160a01b03909216919091179055565b60008281526020819052604090205482906001600160a01b031680158061058657506001600160a01b03811633145b6105c5576040805162461bcd60e51b815260206004820152601b6024820152600080516020610635833981519152604482015290519081900360640190fd5b604080516001600160a01b0385168152905185917fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266919081900360200190a2505060009182526020829052604090912080546001600160a01b0319166001600160a01b0390921691909117905556fe636f6c6f6e792d656e732d6e6f6e2d6f776e65722d6163636573730000000000a264697066735822122089a303a3de88e4e62f59a80d85cac1291330d4d082c7bc9cc1630a5941619e9164736f6c63430007030033",
    "devdoc": {
        "kind": "dev",
        "methods": {
            "constructor": {
                "details": "Constructs a new ENS registrar."
            },
            "owner(bytes32)": {
                "details": "Returns the address that owns the specified node.",
                "params": {
                    "node": "The specified node."
                },
                "returns": {
                    "_0": "address of the owner."
                }
            },
            "resolver(bytes32)": {
                "details": "Returns the address of the resolver for the specified node.",
                "params": {
                    "node": "The specified node."
                },
                "returns": {
                    "_0": "address of the resolver."
                }
            },
            "setOwner(bytes32,address)": {
                "details": "Transfers ownership of a node to a new address.",
                "params": {
                    "node": "The node to transfer ownership of.",
                    "owner": "The address of the new owner."
                }
            },
            "setResolver(bytes32,address)": {
                "details": "Sets the resolver address for the specified node.",
                "params": {
                    "node": "The node to update.",
                    "resolver": "The address of the resolver."
                }
            },
            "setSubnodeOwner(bytes32,bytes32,address)": {
                "details": "Transfers ownership of a subnode keccak256(node, label) to a new address. May only be called by the owner of the parent node.",
                "params": {
                    "label": "The hash of the label specifying the subnode.",
                    "node": "The parent node.",
                    "owner": "The address of the new owner."
                }
            },
            "setTTL(bytes32,uint64)": {
                "details": "Sets the TTL for the specified node.",
                "params": {
                    "node": "The node to update.",
                    "ttl": "The TTL in seconds."
                }
            },
            "ttl(bytes32)": {
                "details": "Returns the TTL of a node, and any records associated with it.",
                "params": {
                    "node": "The specified node."
                },
                "returns": {
                    "_0": "ttl of the node."
                }
            }
        },
        "title": "Modified ENS registry contract.",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "https://github.com/ensdomains/ens/blob/master/contracts/ENSRegistry.sol",
        "version": 1
    }
}