{
    "contractName": "OneTxPayment",
    "abi": [
        {
            "inputs": [
                {
                    "name": "_colony",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_permissionDomainId",
                    "type": "uint256"
                },
                {
                    "name": "_childSkillIndex",
                    "type": "uint256"
                },
                {
                    "name": "_callerPermissionDomainId",
                    "type": "uint256"
                },
                {
                    "name": "_callerChildSkillIndex",
                    "type": "uint256"
                },
                {
                    "name": "_worker",
                    "type": "address"
                },
                {
                    "name": "_token",
                    "type": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256"
                },
                {
                    "name": "_domainId",
                    "type": "uint256"
                },
                {
                    "name": "_skillId",
                    "type": "uint256"
                }
            ],
            "name": "makePayment",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "_permissionDomainId",
                    "type": "uint256"
                },
                {
                    "name": "_childSkillIndex",
                    "type": "uint256"
                },
                {
                    "name": "_callerPermissionDomainId",
                    "type": "uint256"
                },
                {
                    "name": "_callerChildSkillIndex",
                    "type": "uint256"
                },
                {
                    "name": "_worker",
                    "type": "address"
                },
                {
                    "name": "_token",
                    "type": "address"
                },
                {
                    "name": "_amount",
                    "type": "uint256"
                },
                {
                    "name": "_domainId",
                    "type": "uint256"
                },
                {
                    "name": "_skillId",
                    "type": "uint256"
                }
            ],
            "name": "makePaymentFundedFromDomain",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "devdoc": {
        "methods": {
            "makePayment(uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256)": {
                "details": "Assumes that each entity holds administration and funding roles in the same domain, although contract and caller can have the permissions in different domains. Payment is taken from root domain, and the caller must have funding permission explicitly in the root domain",
                "params": {
                    "_amount": "The amount of the token being paid out",
                    "_callerChildSkillIndex": "Index of the _callerPermissionDomainId skill.children array to get",
                    "_callerPermissionDomainId": "The domainId in which the _caller_ has permissions to add a payment and fund it",
                    "_childSkillIndex": "Index of the _permissionDomainId skill.children array to get",
                    "_domainId": "The Id of the domain the payment should be coming from",
                    "_permissionDomainId": "The domainId in which the _contract_ has permissions to add a payment and fund it",
                    "_skillId": "The Id of the skill that the payment should be marked with, possibly awarding reputation in this skill.",
                    "_token": "The address of the token the payment is being made in. 0x00 for Ether.",
                    "_worker": "The address of the recipient of the payment"
                }
            },
            "makePaymentFundedFromDomain(uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256)": {
                "details": "Assumes that each entity holds administration and funding roles in the same domain, although contract and caller can have the permissions in different domains. Payment is taken from domain funds - if the domain does not have sufficient funds, call will fail.",
                "params": {
                    "_amount": "The amount of the token being paid out",
                    "_callerChildSkillIndex": "Index of the _callerPermissionDomainId skill.children array to get",
                    "_callerPermissionDomainId": "The domainId in which the _caller_ has permissions to add a payment and fund it",
                    "_childSkillIndex": "Index of the _permissionDomainId skill.children array to get",
                    "_domainId": "The Id of the domain the payment should be coming from",
                    "_permissionDomainId": "The domainId in which the _contract_ has permissions to add a payment and fund it",
                    "_skillId": "The Id of the skill that the payment should be marked with, possibly awarding reputation in this skill.",
                    "_token": "The address of the token the payment is being made in. 0x00 for Ether.",
                    "_worker": "The address of the recipient of the payment"
                }
            }
        }
    },
    "userdoc": {
        "methods": {
            "makePayment(uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256)": {
                "notice": "Completes a colony payment in a single transaction"
            },
            "makePaymentFundedFromDomain(uint256,uint256,uint256,uint256,address,address,uint256,uint256,uint256)": {
                "notice": "Completes a colony payment in a single transaction"
            }
        }
    }
}